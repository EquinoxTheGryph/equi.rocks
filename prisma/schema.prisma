generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Config {
  name String @id
  data Json   @db.Json

  @@index([name])
}

model Post {
  id          String         @id @default(uuid()) @db.Uuid
  name        String
  description String?
  altText     String?
  visibility  PostVisibility @default(private)
  rating      PostRating     @default(unrated)
  groupName   String?
  mimeType    String
  extension   String
  metadata    Json?          @db.Json
  createdOn   DateTime       @default(now())
  publishedOn DateTime       @default(now())
  modifiedOn  DateTime       @updatedAt

  group Group? @relation(fields: [groupName], references: [name])
  tags  Tag[]

  @@index([id])
}

model Group {
  name        String  @id
  parentName  String?
  title       String
  description String?

  posts    Post[]
  parent   Group?  @relation(name: "GroupRelation", fields: [parentName], references: [name])
  children Group[] @relation("GroupRelation")

  @@index([name])
}

model Tag {
  name String @id
  type String

  posts Post[]

  @@index([name])
}

model UserLink {
  id      String       @id @default(uuid()) @db.Uuid
  title   String /// Item Title
  content String? /// Item Description 
  url     String? /// Url to open when the user clicks it
  order   Int          @default(0) /// At which place should the item appear in (Lower = earlier)
  type    UserLinkType @default(link) /// Display Type
  icon    String? /// Icon SVG Path

  @@index([id])
}

enum UserLinkType {
  link /// Link Button
  title /// Simple Title
  description /// Simple Description
  other /// Other
}

enum PostVisibility {
  public /// Post is visible to anyone
  hidden /// Post is visible to those who access the URL directly
  private /// Post is only visible to the owner (Default)
}

enum PostRating {
  general /// SFW
  mature /// Adult-oriented 
  explicit /// NSFW
  unrated /// No rating has been determined yet
}
